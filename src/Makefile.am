#
# automake Makefile.am for the PrBoom source directory
#
#
# Process this file with automake to produce Makefile.in
#
#

SUBDIRS = SDL POSIX MAC

gamesdir=$(prefix)/games
games_PROGRAMS = prboom prboom-game-server

CFLAGS = @CFLAGS@ @SDL_CFLAGS@

prboom_game_server_SOURCES = d_server.c protocol.h
prboom_game_server_LDADD = POSIX/libposixdoom.a SDL/i_network.o @NET_LIBS@ @SDL_LIBS@

COMMON_HEADER = \
 am_map.h  \
 d_deh.h  \
 d_englsh.h  \
 d_event.h  \
 d_items.h  \
 d_main.h  \
 d_net.h  \
 d_player.h  \
 d_think.h  \
 d_ticcmd.h  \
 doomdata.h  \
 doomdef.h  \
 doomstat.h  \
 doomtype.h  \
 dstrings.h  \
 f_finale.h  \
 f_wipe.h  \
 g_game.h  \
 hu_lib.h  \
 hu_stuff.h  \
 i_joy.h  \
 i_main.h  \
 i_network.h  \
 i_sound.h  \
 i_system.h  \
 i_video.h  \
 info.h  \
 lprintf.h  \
 m_argv.h  \
 m_bbox.h  \
 m_cheat.h  \
 m_fixed.h  \
 m_menu.h  \
 m_misc.h  \
 m_random.h  \
 m_swap.h  \
 md5.h  \
 mmus2mid.h  \
 p_checksum.h  \
 p_enemy.h  \
 p_inter.h  \
 p_map.h  \
 p_maputl.h  \
 p_mobj.h  \
 p_pspr.h  \
 p_saveg.h  \
 p_setup.h  \
 p_spec.h  \
 p_tick.h  \
 p_user.h  \
 protocol.h  \
 r_bsp.h  \
 r_data.h  \
 r_defs.h  \
 r_demo.h  \
 r_draw.h  \
 r_filter.h  \
 r_fps.h  \
 r_main.h  \
 r_patch.h  \
 r_plane.h  \
 r_segs.h  \
 r_sky.h  \
 r_state.h  \
 r_things.h  \
 s_sound.h  \
 sounds.h  \
 st_lib.h  \
 st_stuff.h  \
 tables.h  \
 v_video.h  \
 version.h  \
 w_wad.h	\
 wi_stuff.h  \
 z_bmalloc.h  \
 z_zone.h

COMMON_SRC = \
 am_map.c  \
 d_deh.c  \
 d_items.c  \
 d_main.c  \
 doomdef.c  \
 doomstat.c  \
 dstrings.c  \
 f_finale.c  \
 f_wipe.c  \
 g_game.c  \
 hu_lib.c  \
 hu_stuff.c  \
 info.c  \
 lprintf.c  \
 m_argv.c  \
 m_bbox.c  \
 m_cheat.c  \
 m_menu.c  \
 m_misc.c  \
 m_random.c  \
 md5.c  \
 mmus2mid.c  \
 p_ceilng.c  \
 p_checksum.c  \
 p_doors.c  \
 p_enemy.c  \
 p_floor.c  \
 p_genlin.c  \
 p_inter.c  \
 p_lights.c  \
 p_map.c  \
 p_maputl.c  \
 p_mobj.c  \
 p_plats.c  \
 p_pspr.c  \
 p_saveg.c  \
 p_setup.c  \
 p_sight.c  \
 p_spec.c  \
 p_switch.c  \
 p_telept.c  \
 p_tick.c  \
 p_user.c  \
 r_bsp.c  \
 r_data.c  \
 r_demo.c  \
 r_draw.c  \
 r_filter.c  \
 r_fps.c  \
 r_main.c  \
 r_patch.c  \
 r_plane.c  \
 r_segs.c  \
 r_sky.c	\
 r_things.c  \
 s_sound.c  \
 sounds.c  \
 st_lib.c  \
 st_stuff.c  \
 tables.c  \
 v_video.c  \
 version.c  \
 w_wad.c	\
 wi_stuff.c  \
 z_bmalloc.c  \
 z_zone.c  \
 $(COMMON_HEADER)

NET_CLIENT_SRC = d_client.c

if BUILD_GL
USE_GL_HEADER = gl_intern.h  gl_struct.h
USE_GL_SRC = gl_main.c  gl_texture.c  $(USE_GL_HEADER)
else
USE_GL_HEADER =
USE_GL_SRC =
endif

if WAD_MMAP
WAD_SRC = w_mmap.c
else
WAD_SRC = w_memcache.c
endif

prboom_SOURCES = $(COMMON_SRC) $(NET_CLIENT_SRC) $(USE_GL_SRC) $(WAD_SRC)
prboom_LDADD = SDL/libsdldoom.la @MIXER_LIBS@ @NET_LIBS@ @SDL_LIBS@ @GL_LIBS@ @MATH_LIB@

EXTRA_DIST = \
 r_drawcolumn.inl r_drawflush.inl r_drawspan.inl r_drawcolpipeline.inl

check_SCRIPTS = check_self_sufficiency_of_all_headers.test

# Construct a shell expression that appropriately calls the compiler, in order to test the self-sufficiency of all header files.
#
# Do this by starting with the COMPILE expression generated by automake, which appropriately sets up things like include paths and
# standard macro definitions, and make these adjustments:
#	-o /dev/null
#		- Produce no output from the compilation by writing the output to /dev/null
#		- This is done so that executing this command requires to subsequent clean up
#	-x c -
# 		- Have the compiler accept input from STDIN by specifying '-' as the input
#		- Explicitly specify the source lanuage as C: '-x c'
#			- This must be done because the compiler no longer has a file name with an extention from which to infer the source language
COMPILER_SHELL_EXPRESSION_FOR_HEADER_FILE_CHECK = $(COMPILE) -o /dev/null -x c -

ALL_HEADER = $(COMMON_HEADER) $(USE_GL_HEADER)

check_self_sufficiency_of_all_headers.test: Makefile
	( \
		echo "#!/bin/sh"; \
		echo '$(PYTHON) $(top_srcdir)/scripts/check_self_sufficiency_of_c_headers.py --paths_to_headers $(ALL_HEADER) --compiler_shell_expression "$(COMPILER_SHELL_EXPRESSION_FOR_HEADER_FILE_CHECK)"'; \
	) > check_self_sufficiency_of_all_headers.test
	chmod +x check_self_sufficiency_of_all_headers.test

TESTS = check_self_sufficiency_of_all_headers.test
